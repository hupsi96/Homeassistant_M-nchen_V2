##################################################################################################
# Smart Button Flo
##################################################################################################

- alias: Turn_on_Flo
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005bb6_action
      to: 'on'
    - platform: state
      entity_id: sensor.0x0017880108005bb6_action
      to: 'off'
  condition:
    - condition: state
      entity_id: 'light.flo_fado'
      state: 'off'
  action:
    - service: hue.hue_activate_scene
      data_template: 
        group_name: "Flo"
        scene_name: >
          {{ states('input_select.scene_flo') }}
    - service: timer.start
      entity_id: timer.flo_debounce

- alias: Turn_off_Flo
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005bb6_action
      to: 'on'
    - platform: state
      entity_id: sensor.0x0017880108005bb6_action
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'light.flo_fado'
        state: 'on'
      - condition: state
        entity_id: timer.flo_debounce
        state: idle
  action:
    service: rest_command.flo_lightOff_request

- alias: Switch_Flo
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005bb6_action
      to: 'on'
    - platform: state
      entity_id: sensor.0x0017880108005bb6_action
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'light.flo_fado'
        state: 'on'
      - condition: state
        entity_id: timer.flo_debounce
        state: active
  action:
    - service: input_select.select_next
      entity_id: input_select.scene_flo
    - service: hue.hue_activate_scene
      data_template: 
        group_name: "Flo"
        scene_name: >
          {{ states('input_select.scene_flo') }}
    - service: timer.cancel
      entity_id: timer.flo_debounce
    - service: timer.start
      entity_id: timer.flo_debounce

- alias: Night_Switch_Flo
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005bb6_action
      to: 'skip_backward'
  condition:
    - condition: state
      entity_id: timer.flo_debounce
      state: idle
  action:
    - service_template: >
        {% if is_state('input_boolean.flo_nachtmodus', 'off') %}
          rest_command.flo_lightoff_request
        {% else %} 
          rest_command.flo_lighton_request
        {% endif %}
    - service_template: >
        {% if is_state('input_boolean.flo_nachtmodus', 'off') %}
          input_boolean.turn_on
        {% else %}
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.flo_nachtmodus
    - service: timer.cancel
      entity_id: timer.flo_debounce
    - service: timer.start
      entity_id: timer.flo_debounce

- alias: chris_Night_mode_timer_start
  trigger:
    - platform: state
      entity_id: input_boolean.flo_nachtmodus
      from: 'off'
      to: 'on'
  action:
    - service: timer.start
      entity_id: timer.flo_nightmode_counter

- alias: chris_Night_mode_timer_stop
  trigger:
    - platform: state
      entity_id: input_boolean.flo_nachtmodus
      from: 'on'
      to: 'off'
  action:
    - service: timer.cancel
      entity_id: timer.flo_nightmode_counter

- alias: chris_Night_mode_timer_expired
  trigger:
    - platform: state
      entity_id: timer.flo_nightmode_counter
      from: active
      to: idle
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.flo_nachtmodus

##################################################################################################
# Smart Button Christian
##################################################################################################

- alias: Turn_on_Chris
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005baf_action
      to: 'on'
    - platform: state
      entity_id: sensor.0x0017880108005baf_action
      to: 'off'
  condition:
    - condition: state
      entity_id: 'light.christian_2'
      state: 'off'
  action:
    - service: rest_command.chris_lighton_request
    - service: timer.cancel
      entity_id: timer.chris_debounce
    - service: timer.start
      entity_id: timer.chris_debounce

- alias: Turn_off_Chris
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005baf_action
      to: 'on'
    - platform: state
      entity_id: sensor.0x0017880108005baf_action
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'light.christian_2'
        state: 'on'
      - condition: state
        entity_id: timer.chris_debounce
        state: idle
  action:
    service: rest_command.chris_lightoff_request

- alias: Switch_Chris
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005baf_action
      to: 'on'
    - platform: state
      entity_id: sensor.0x0017880108005baf_action
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'light.christian_2'
        state: 'on'
      - condition: state
        entity_id: timer.chris_debounce
        state: active
  action:
    - service: input_select.select_next
      entity_id: input_select.scene_chris
    - service: hue.hue_activate_scene
      data_template: 
        group_name: "Christian"
        scene_name: >
          {{ states('input_select.scene_chris') }}
    - service: timer.cancel
      entity_id: timer.chris_debounce
    - service: timer.start
      entity_id: timer.chris_debounce

- alias: Night_Switch_Chris
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005baf_action
      to: 'skip_backward'
  condition:
    - condition: state
      entity_id: timer.chris_debounce
      state: idle
  action:
    - service_template: >
        {% if is_state('input_boolean.christian_nachtmodus', 'off') %}
          rest_command.chris_lightoff_request
        {% else %} 
          rest_command.chris_lighton_request
        {% endif %}
    - service_template: >
        {% if is_state('input_boolean.christian_nachtmodus', 'off') %}
          input_boolean.turn_on
        {% else %} 
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.christian_nachtmodus
    - service: timer.cancel
      entity_id: timer.chris_debounce
    - service: timer.start
      entity_id: timer.chris_debounce

- alias: chris_Night_mode_timer_start
  trigger:
    - platform: state
      entity_id: input_boolean.christian_nachtmodus
      from: 'off'
      to: 'on'
  action:
    - service: timer.start
      entity_id: timer.christian_nightmode_counter

- alias: chris_Night_mode_timer_stop
  trigger:
    - platform: state
      entity_id: input_boolean.christian_nachtmodus
      from: 'on'
      to: 'off'
  action:
    - service: timer.cancel
      entity_id: timer.christian_nightmode_counter

- alias: chris_Night_mode_timer_expired
  trigger:
    - platform: state
      entity_id: timer.christian_nightmode_counter
      from: active
      to: idle
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.christian_nachtmodus

  

##################################################################################################
# Smart Button Simon 
##################################################################################################

- alias: Turn_on_Simon
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005f02_action
      to: 'on'
    - platform: state
      entity_id: sensor.0x0017880108005f02_action
      to: 'off'
  condition:
    - condition: state
      entity_id: 'light.simon_2'
      state: 'off'
  action:
    - service: rest_command.simon_lighton_request
    - service: timer.cancel
      entity_id: timer.simon_debounce
    - service: timer.start
      entity_id: timer.simon_debounce

- alias: Turn_off_Simon
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005f02_action
      to: 'on'
    - platform: state
      entity_id: sensor.0x0017880108005f02_action
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'light.simon_2'
        state: 'on'
      - condition: state
        entity_id: timer.simon_debounce
        state: idle
  action:
    service: rest_command.simon_lightoff_request

- alias: Switch_Simon
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005f02_action
      to: 'on'
    - platform: state
      entity_id: sensor.0x0017880108005f02_action
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'light.simon_2'
        state: 'on'
      - condition: state
        entity_id: timer.simon_debounce
        state: active
  action:
    - service: input_select.select_next
      entity_id: input_select.scene_simon
    - service: hue.hue_activate_scene
      data_template: 
        group_name: "Simon"
        scene_name: >
          {{ states('input_select.scene_simon') }}
    - service: timer.cancel
      entity_id: timer.simon_debounce
    - service: timer.start
      entity_id: timer.simon_debounce

- alias: Night_Switch_Simon
  trigger:
    - platform: state
      entity_id: sensor.0x0017880108005f02_action
      to: 'skip_backward'
  condition:
    - condition: state
      entity_id: timer.simon_debounce
      state: idle
  action:
    - service_template: >
        {% if is_state('input_boolean.simon_nachtmodus', 'off') %}
          rest_command.simon_lightoff_request
        {% else %} 
          rest_command.simon_lighton_request
        {% endif %}
    - service_template: >
        {% if is_state('input_boolean.simon_nachtmodus', 'off') %}
          input_boolean.turn_on
        {% else %} 
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.simon_nachtmodus
    - service: timer.cancel
      entity_id: timer.simon_debounce
    - service: timer.start
      entity_id: timer.simon_debounce

- alias: simon_Night_mode_timer_start
  trigger:
    - platform: state
      entity_id: input_boolean.simon_nachtmodus
      from: 'off'
      to: 'on'
  action:
    - service: timer.start
      entity_id: timer.simon_nightmode_counter

- alias: simon_Night_mode_timer_stop
  trigger:
    - platform: state
      entity_id: input_boolean.simon_nachtmodus
      from: 'on'
      to: 'off'
  action:
    - service: timer.cancel
      entity_id: timer.simon_nightmode_counter

- alias: simon_Night_mode_timer_expired
  trigger:
    - platform: state
      entity_id: timer.simon_nightmode_counter
      from: active
      to: idle
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.simon_nachtmodus
##################################################################################################
# Garderobe & Gang Status Change
##################################################################################################

- alias: garderobe_gang_status_switch
  initial_state: true
  trigger:
    - platform: state
      entity_id: device_tracker.flos_iphone_2
    - platform: state
      entity_id: device_tracker.iphone_von_simon
    - platform: state
      entity_id: device_tracker.iphone_chris_manuell_2
    - platform: state
      entity_id: input_boolean.christian_nachtmodus
    - platform: state
      entity_id:  input_boolean.flo_nachtmodus
    - platform: state
      entity_id: input_boolean.simon_nachtmodus
  action:
    - service_template: >
        {% if (is_state('input_boolean.christian_nachtmodus', 'on') and is_state('device_tracker.iphone_chris_manuell_2', 'home')) or (is_state('device_tracker.iphone_chris_manuell_2', 'not_home') and ((is_state('input_boolean.simon_nachtmodus', 'on') and is_state('device_tracker.iphone_von_simon', 'home')) or (is_state('input_boolean.flo_nachtmodus', 'on') and is_state('device_tracker.flos_iphone_2', 'home')))) %}
          input_boolean.turn_on
        {% else %} 
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.garderobe_nachtmodus
    - service_template: >
        {% if (is_state('input_boolean.flo_nachtmodus', 'on') and is_state('device_tracker.flos_iphone_2', 'home')) or  (is_state('input_boolean.simon_nachtmodus', 'on') and is_state('device_tracker.iphone_von_simon', 'home')) or (is_state('device_tracker.iphone_von_simon', 'not_home') and is_state('device_tracker.flos_iphone_2', 'not_home') and is_state('input_boolean.christian_nachtmodus', 'on') and is_state('device_tracker.iphone_chris_manuell_2', 'home')) %}
          input_boolean.turn_on
        {% else %} 
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.gang_nachtmodus

##################################################################################################
# Garderobe & Gang Nightmode Light Change
##################################################################################################

- alias: gaderobe_nightmode_activated
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_boolean.garderobe_nachtmodus
  condition:
    - condition: state
      entity_id: timer.garderobe_debounce
      state: 'active'
  action:
    - service_template: >
        {% if is_state('timer.garderobe_debounce_dim', 'active') and is_state('input_boolean.garderobe_nachtmodus', 'off') %}
          rest_command.garderobe_lighton_recall_request
        {% elif is_state('timer.garderobe_debounce_dim', 'idle') and is_state('input_boolean.garderobe_nachtmodus', 'off') %}
          rest_command.garderobe_lighton_recall_dim_request
        {% elif is_state('timer.garderobe_debounce_dim', 'active') and is_state('input_boolean.garderobe_nachtmodus', 'on') %} 
          rest_command.garderobe_lightonnight_recall_request
        {% else %}
          rest_command.garderobe_lightonnight_recall_request
        {% endif %}

- alias: gang_nightmode_activated
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_boolean.gang_nachtmodus
  condition:
    - condition: state
      entity_id: timer.gang_debounce
      state: 'active'
  action:
    - service_template: >
        {% if is_state('timer.gang_debounce_dim', 'active') and is_state('input_boolean.gang_nachtmodus', 'off') %}
          rest_command.gang_lighton_recall_request
        {% elif is_state('timer.gang_debounce_dim', 'idle') and is_state('input_boolean.gang_nachtmodus', 'off') %}
          rest_command.gang_lighton_recall_dim_request
        {% elif is_state('timer.gang_debounce_dim', 'active') and is_state('input_boolean.gang_nachtmodus', 'on') %} 
          rest_command.gang_lightonnight_recall_request
        {% else %}
          rest_command.gang_lightonnight_recall_request
        {% endif %}

##################################################################################################
# Garderobe Motion Detection
##################################################################################################

- alias: Garderobe_turn_on
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.0x0017880106f68789_occupancy #Replace with motion detector id
      to: 'on'
  condition:
    - condition: template
      value_template: "{{ (state_attr('binary_sensor.0x0017880106f68789_occupancy', 'occupancy')) }}"
    - condition: state
      entity_id:  timer.garderobe_debounce_dim
      state: 'idle'
    - condition: state
      entity_id:  input_boolean.weather_good
      state: 'off'
  action:
    - service_template: >
        {% if is_state('group.garderobe', 'off') and is_state('input_boolean.garderobe_nachtmodus', 'on') %}
          rest_command.garderobe_lightonnight_request
        {% elif is_state('group.garderobe', 'on') and is_state('input_boolean.garderobe_nachtmodus', 'on') %}
            rest_command.garderobe_lightonnight_recall_request
        {% elif is_state('group.garderobe', 'off') %} 
          rest_command.garderobe_lighton_request
        {% else %}
          rest_command.garderobe_lighton_recall_request
        {% endif %}
    - service: timer.cancel
      entity_id: timer.garderobe_debounce
    - service: timer.start
      entity_id: timer.garderobe_debounce
    - service: timer.cancel
      entity_id: timer.garderobe_debounce_dim
    - service: timer.start
      entity_id: timer.garderobe_debounce_dim
    
- alias: Garderobe_keep_turn_on
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.0x0017880106f68789_occupancy #Replace with motion detector id
  condition:
    - condition: template
      value_template: "{{ (state_attr('binary_sensor.0x0017880106f68789_occupancy', 'occupancy')) }}"
    - condition: state
      entity_id:  timer.garderobe_debounce
      state: 'active'
  action:
    - service: timer.cancel
      entity_id: timer.garderobe_debounce
    - service: timer.start
      entity_id: timer.garderobe_debounce
    - service: timer.cancel
      entity_id: timer.garderobe_debounce_dim
    - service: timer.start
      entity_id: timer.garderobe_debounce_dim

- alias: Garderobe_dim
  initial_state: true
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.garderobe_debounce_dim
  action:
    - service_template: >
        {% if is_state('group.garderobe', 'off') and is_state('input_boolean.garderobe_nachtmodus', 'on') %}
          rest_command.garderobe_lightonnight_request
        {% elif is_state('group.garderobe', 'on') and is_state('input_boolean.garderobe_nachtmodus', 'on') %}
          rest_command.garderobe_lightonnight_recall_request
        {% elif is_state('group.group.garderobe', 'off') %} 
          rest_command.garderobe_lighton_dim_request
        {% else %}
          rest_command.garderobe_lighton_recall_dim_request
        {% endif %}

- alias: Garderobe_off
  initial_state: true
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.garderobe_debounce
  action:
    - service: rest_command.garderobe_lightoff_request

##################################################################################################
# Gang Motion Detection
##################################################################################################

- alias: Gang_turn_on
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.0x0017880106f671d9_occupancy
      to: 'on'
  condition:
    - condition: template
      value_template: "{{ (state_attr('binary_sensor.0x0017880106f671d9_occupancy', 'occupancy')) }}"
    - condition: state
      entity_id:  timer.gang_debounce_dim
      state: 'idle'
    - condition: state
      entity_id:  input_boolean.weather_good
      state: 'off'
  action:
    - service_template: >
        {% if is_state('group.gang', 'off') and is_state('input_boolean.gang_nachtmodus', 'on') %}
          rest_command.gang_lightonnight_request
        {% elif is_state('group.gang', 'on') and is_state('input_boolean.gang_nachtmodus', 'on') %}
          rest_command.gang_lightonnight_recall_request
        {% elif (is_state('group.gang', 'off')) %} 
          rest_command.gang_lighton_request
        {% else %}
          rest_command.gang_lighton_recall_request
        {% endif %}
    - service: timer.cancel
      entity_id: timer.gang_debounce
    - service: timer.start
      entity_id: timer.gang_debounce
    - service: timer.cancel
      entity_id: timer.gang_debounce_dim
    - service: timer.start
      entity_id: timer.gang_debounce_dim
    
- alias: Gang_keep_turn_on
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.0x0017880106f671d9_occupancy
  condition:
    - condition: template
      value_template: "{{ (state_attr('binary_sensor.0x0017880106f671d9_occupancy', 'occupancy')) }}"
    - condition: state
      entity_id:  timer.gang_debounce_dim
      state: 'active'
  action:
    - service: timer.cancel
      entity_id: timer.gang_debounce
    - service: timer.start
      entity_id: timer.gang_debounce
    - service: timer.cancel
      entity_id: timer.gang_debounce_dim
    - service: timer.start
      entity_id: timer.gang_debounce_dim

- alias: Gang_dim
  initial_state: true
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.gang_debounce_dim
  action:
    - service_template: >
        {% if is_state('group.gang', 'off') and is_state('input_boolean.gang_nachtmodus', 'on') %}
          rest_command.gang_lightonnight_request
        {% elif is_state('group.gang', 'on') and is_state('input_boolean.gang_nachtmodus', 'on') %}
          rest_command.gang_lightonnight_recall_request
        {% elif (is_state('group.gang', 'off')) %} 
          rest_command.gang_lighton_dim_request
        {% else %}
          rest_command.gang_lighton_dim_recall_request
        {% endif %}

- alias: Gang_off
  initial_state: true
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.gang_debounce
  action:
    - service: rest_command.gang_lightoff_request


#weather automation
- alias: Weather condition to good
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.owm_condition
      to: "clear sky"
  condition:
    - condition: and
      conditions:
        - condition: sun
          before: sunset
          before_offset: "-01:00:00"
        - condition: sun
          after: sunrise
          after_offset: "+01:00:00"
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.weather_good

- alias: Weather condition from good
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.owm_condition
      from: "clear sky"
  condition:
    - condition: and
      conditions:
        - condition: sun
          before: sunset
          before_offset: "-01:00:00"
        - condition: sun
          after: sunrise
          after_offset: "+01:00:00"
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.weather_good

- alias: Weather condition night
  initial_state: true
  trigger:
    platform: sun
    event: sunset
    offset: "-01:00:00"
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.weather_good

- alias: Weather condition morning
  initial_state: true
  trigger:
    platform: sun
    event: sunrise
    offset: "+01:00:00"
  condition:
    - condition: state
      entity_id: sensor.owm_condition
      state: "clear sky"
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.weather_good
      
##################################################################################################
# Wifi Down automation
##################################################################################################

- alias: Wifi_down
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_boolean.wifi_down
      from: "off"
      to: "on"
  action:
    - service: homeassistant.turn_off
      entity_id: automation.flo_coming_home_light

- alias: Wifi_down
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_boolean.wifi_down
      from: "on"
      to: "off"
  action:
    - service: homeassistant.turn_on
      entity_id: automation.flo_coming_home_light


# Template for using data_tamplate {{ trigger.from_state.state }}
# data_template: 
#         group_name: "Flo" #TODO: change to "Gang" after creating in HUE App
#         scene_name: >
#           {% if is_state('input_select.scene_flo', 'on') or (is_state('input_boolean.flo_nachtmodus', 'on') and is_state('input_boolean.simon_nachtmodus', 'on')) %} 
#             Nacht 2
#           {% else %} 
#             Hell
#           {% endif %}

#{% if (is_state('input_boolean.christian_nachtmodus', 'on') and is_state('device_tracker.iphone_chris_manuell_2', 'home')) or (is_state('device_tracker.iphone_chris_manuell_2', 'not_home') and is_state('input_boolean.flo_nachtmodus', 'on') and is_state('input_boolean.simon_nachtmodus', 'on') and is_state('device_tracker.flos_iphone_2', 'home') and is_state('device_tracker.iphone_von_simon', 'home')) or (is_state('device_tracker.iphone_chris_manuell_2', 'not_home') and is_state('input_boolean.flo_nachtmodus', 'on') and is_state('device_tracker.flos_iphone_2', 'home') and is_state('device_tracker.iphone_von_simon', 'not_home')) or (is_state('device_tracker.iphone_chris_manuell_2', 'not_home') and is_state('input_boolean.simon_nachtmodus', 'on') and is_state('device_tracker.flos_iphone_2', 'not_home') and is_state('device_tracker.iphone_von_simon', 'home')) %}

###################################################
# Comming Home automation - Timer Start
###################################################

###################################################
# New Version Timer
###################################################

- alias: 'Coming Home GPS Timer new' # new Version
  initial_state: true
  trigger:
    - platform: state #GPS All
      entity_id: sensor.someone_home_gps
      from: 'off'
      to: 'one'
  condition:
    - condition: state
      entity_id:  sensor.someone_home_wifi #WIFI All
      state: 'off'    
  action:
    - service: timer.start
      entity_id: timer.coming_come_timer


###################################################
# Comming Home automation - All
###################################################

###################################################
# New Version Light
###################################################
- alias: 'Comming Home Light'
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.someone_home_wifi #WiFi based
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: or
        conditions:
          - condition: sun
            before: sunrise
            before_offset: "+01:00:00"
          - condition: sun
            after: sunset
            after_offset: "-01:00:00"
      - condition: state
        entity_id:  timer.coming_come_timer
        state: 'active'
      - condition: state
        entity_id:  device_tracker.steffi_sugar
        state: 'not_home'
      - condition: state
        entity_id:  device_tracker.iphonevranziska
        state: 'not_home'
  action:
    - service: hue.hue_activate_scene
      data:
        group_name: Wohnzimmer
        scene_name: Entspannt
    - service: hue.hue_activate_scene
      data_template:
        group_name: >
          {% if is_state('device_tracker.iphone_von_christian', 'home') %}
            Christian
          {% elif is_state('device_tracker.simons_iphone' , 'home') %}
            Simon
          {% elif is_state('device_tracker.iphone_5', 'home') %}
            Flo
          {% else %}
            Wohnzimmer
          {% endif %}
        scene_name: >
          {% if is_state('device_tracker.iphone_von_christian', 'home') %}
            Standard
          {% elif is_state('device_tracker.simons_iphone' , 'home') %}
            Hell
          {% elif is_state('device_tracker.iphone_5', 'home') %}
            Hell
          {% else %}
            Entspannt
          {% endif %}
    - delay: 0:30
    - service: timer.cancel
      entity_id: timer.coming_come_timer



#New Version
#http://192.168.178.73:5005/wohnzimmer/spotify/now/spotify:user:spotify:playlist:37i9dQZF1DWTlzJXLRpd4a?si=YTl1WZsRR5KniTjm6XQSWA api request to start playlist on sonos
#source for documtation: https://github.com/jishi/node-sonos-http-api
- alias: 'Comming Home Music'
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.someone_home_wifi #WiFi based
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id:  timer.coming_come_timer
        state: 'active'
      - condition: state
        entity_id:  device_tracker.steffi_sugar
        state: 'not_home'
      - condition: state
        entity_id:  device_tracker.iphonevranziska
        state: 'not_home'
  action:
    - service: rest_command.sonos_playlist_clear
    - service: rest_command.sonos_speech_preset
    - delay: 00:00:03
    - service: rest_command.sonos_speech_preset
    - service: tts.google_translate_say
      entity_id: media_player.wohnzimmer
      data_template: 
        message: >
          {% if is_state('device_tracker.iphone_von_christian', 'home') %}
            'Hallo Chris, schön dass du Daheim bist.'
          {% elif is_state('device_tracker.steffi_sugar', 'home') %}
            'Hallo Steffi, schön dass du den weiten Weg von Amsterdam bis zu uns in die WG gefunden hast! Willkommen!'
          {% elif is_state('device_tracker.iphone_von_simon', 'home') %}
            'Hallo Simon, schön dass du Daheim bist.'
          {% elif is_state('device_tracker.flos_iphone_2', 'home') %}
            'Hallo Flo, schön dass du auch mal Daheim bist.'
          {% elif is_state('device_tracker.iphonevranziska', 'home') %}
            'Hallo Franzi, schön dass du wieder bei uns in der WG bist.'
          {% else %} 
            'Hallo und herzlich willkommen!'
          {% endif %}
    - delay: 00:00:05
    - service: rest_command.sonos_playlist_preset
    - service: input_number.set_value
      data_template:
        entity_id: input_number.box1
        value: '{{ range(0, 4) | random | float }}'
    - service_template: >
        {% if is_state('input_number.box1', '0.0' ) %}
          {% if is_state('device_tracker.iphone_von_christian', 'home') %}
            rest_command.sonos_playlist_chris_1
          {% elif is_state('device_tracker.flos_iphone_2', 'home') or is_state('device_tracker.iphonevranziska', 'home') %}
            rest_command.sonos_playlist_flo_1
          {% else %}
            rest_command.sonos_playlist_simon_1
          {% endif %}
        {% elif is_state('input_number.box1', '1.0' ) %}
          {% if is_state('device_tracker.iphone_von_christian', 'home') %}
            rest_command.sonos_playlist_chris_2
          {% elif is_state('device_tracker.flos_iphone_2', 'home') or is_state('device_tracker.iphonevranziska', 'home') %}
            rest_command.sonos_playlist_flo_2
          {% else %}
            rest_command.sonos_playlist_simon_2
          {% endif %}
        {% elif is_state('input_number.box1', '2.0' ) %}
          {% if is_state('device_tracker.iphone_von_christian', 'home') %}
            rest_command.sonos_playlist_chris_3
          {% elif is_state('device_tracker.flos_iphone_2', 'home') or is_state('device_tracker.iphonevranziska', 'home') %}
            rest_command.sonos_playlist_flo_3
          {% else %}
            rest_command.sonos_playlist_simon_3
          {% endif %}
        {% else %}
          {% if is_state('device_tracker.iphone_von_christian', 'home') %}
            rest_command.sonos_playlist_chris_4
          {% elif is_state('device_tracker.flos_iphone_2', 'home') or is_state('device_tracker.iphonevranziska', 'home') %}
            rest_command.sonos_playlist_flo_4
          {% else %}
            rest_command.sonos_playlist_simon_4
          {% endif %}
        {% endif %}
    - delay: 0:05
    - service: rest_command.sonos_playlist_play
    - delay: 0:05
    - service: timer.cancel
      entity_id: timer.coming_come_timer


###################################################
# Sonnenuntergang Licht an
###################################################

- alias: 'Sonnenuntergang Licht'
  initial_state: true
  trigger:
    platform: sun
    event: sunset
    offset: "-01:00:00"
  condition:
    condition: and
    conditions:
      - condition: or
        conditions:
          - condition: state
            entity_id: device_tracker.iphone_von_simon # Wifi
            state: 'home'
          - condition: state
            entity_id: device_tracker.flos_iphone_2 # Wifi
            state: 'home'
          - condition: state
            entity_id: device_tracker.iphonevranziska # Wifi
            state: 'home'
          - condition: state
            entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
            state: 'home'
          - condition: state
            entity_id: device_tracker.steffi_sugar # Wifi
            state: 'home'
      - condition: state
        entity_id: light.wohnzimmer
        state: 'off'
  action:
    - service: hue.hue_activate_scene
      data:
        group_name: Wohnzimmer
        scene_name: Sunset
    - service: light.turn_on
      entity_id: light.wohnzimmer
      data:
        transition: 900
        brightness: 200

###################################################
# TV turn_on
###################################################

- alias: 'Fernseher Wohnzimmer anschalten'
  initial_state: true
  trigger:
    platform: state
    entity_id: device_tracker.tizen
    from: 'not_home'
    to: 'home'
  condition:
    - condition: state
      entity_id: light.wohnzimmer
      state: 'on'
  action:
    - service: hue.hue_activate_scene
      data:
        group_name: Wohnzimmer
        scene_name: Kino Start
    - service: rest_command.sonos_kueche_pause
    - service: rest_command.sonos_esstisch_pause
    - service: light.turn_on
      entity_id: light.wohnzimmer
      data:
        transition: 10
        brightness: 50
    
#old code

# - alias: 'Coming Home GPS Timer'
#   initial_state: true
#   trigger:
#     - platform: state #GPS Christian
#       entity_id: device_tracker.iphone_von_christian
#       from: "not_home"
#       to: "home"
#     - platform: state #GPS Simon
#       entity_id: device_tracker.simons_iphone
#       from: "not_home"
#       to: "home"
#     - platform: state #GPS Florian
#       entity_id: device_tracker.iphone_5
#       from: "not_home"
#       to: "home"
#   condition:
#     - condition: or
#       conditions:
#       - condition: and
#         conditions: # Chris 
#           - condition: state
#             entity_id: device_tracker.iphone_von_christian # GPS
#             state: 'home'
#           - condition: state
#             entity_id: device_tracker.simons_iphone # GPS
#             state: 'not_home'
#           - condition: state
#             entity_id: device_tracker.iphone_5 # GPS
#             state: 'not_home'
#       - condition: and
#         conditions: # Simon
#           - condition: state
#             entity_id: device_tracker.iphone_von_christian # GPS
#             state: 'not_home'
#           - condition: state
#             entity_id: device_tracker.simons_iphone # GPS
#             state: 'home'
#           - condition: state
#             entity_id: device_tracker.iphone_5 # GPS
#             state: 'not_home'
#       - condition: and
#         conditions: # Flo
#           - condition: state
#             entity_id: device_tracker.iphone_von_christian # GPS
#             state: 'not_home'
#           - condition: state
#             entity_id: device_tracker.simons_iphone # GPS
#             state: 'not_home'
#           - condition: state
#             entity_id: device_tracker.iphone_5 # GPS
#             state: 'home' 
#   action:
#     - service: timer.start
#       entity_id: timer.coming_come_timer

# - alias: 'Comming Home Music'
#   initial_state: true
#   trigger:
#     - platform: state
#       entity_id: device_tracker.iphone_chris_manuell_2 #WiFi based
#       from: "not_home"
#       to: "home"
#     - platform: state
#       entity_id: device_tracker.iphone_von_simon #WiFi based
#       from: "not_home"
#       to: "home"
#     - platform: state
#       entity_id: device_tracker.flos_iphone_2 #WiFi based
#       from: "not_home"
#       to: "home"
#     - platform: state
#       entity_id: device_tracker.iphonevranziska #WiFi based
#       from: "not_home"
#       to: "home"
#     - platform: state
#       entity_id: device_tracker.steffi_sugar #WiFi based
#       from: "not_home"
#       to: "home"
#   condition:
#     condition: and
#     conditions:
#       - condition: state
#         entity_id:  timer.coming_come_timer
#         state: 'active'
#       - condition: or
#         conditions:
#           - condition: and
#             conditions: # Chris
#               - condition: state
#                 entity_id: device_tracker.iphone_von_simon # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.flos_iphone_2 # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.iphonevranziska # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
#                 state: 'home'
#               - condition: state
#                 entity_id: device_tracker.steffi_sugar # Wifi
#                 state: 'not_home'
#           - condition: and
#             conditions: # Franzi
#               - condition: state
#                 entity_id: device_tracker.iphone_von_simon # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.flos_iphone_2 # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.iphonevranziska # Wifi
#                 state: 'home'
#               - condition: state
#                 entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.steffi_sugar # Wifi
#                 state: 'not_home'
#           - condition: and
#             conditions: # Flo
#               - condition: state
#                 entity_id: device_tracker.iphone_von_simon # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.flos_iphone_2 # Wifi
#                 state: 'home'
#               - condition: state
#                 entity_id: device_tracker.iphonevranziska # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.steffi_sugar # Wifi
#                 state: 'not_home'
#           - condition: and
#             conditions: # Simon
#               - condition: state
#                 entity_id: device_tracker.iphone_von_simon # Wifi
#                 state: 'home'
#               - condition: state
#                 entity_id: device_tracker.flos_iphone_2 # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.iphonevranziska # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.steffi_sugar # Wifi
#                 state: 'not_home'
#           - condition: and
#             conditions: # Steffi
#               - condition: state
#                 entity_id: device_tracker.iphone_von_simon # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.flos_iphone_2 # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.iphonevranziska # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
#                 state: 'not_home'
#               - condition: state
#                 entity_id: device_tracker.steffi_sugar # Wifi
#                 state: 'home'
#   action:
#     - service: timer.cancel
#       entity_id: timer.coming_come_timer
#     - service: rest_command.sonos_playlist_clear
#     - service: rest_command.sonos_speech_preset
#     - delay: 00:00:03
#     - service: rest_command.sonos_speech_preset
#     - service: tts.google_translate_say
#       entity_id: media_player.wohnzimmer
#       data_template: 
#         message: >
#           {% if trigger.entity_id == 'device_tracker.iphone_chris_manuell_2' %}
#             'Hallo Chris, schön dass du Daheim bist.'
#           {% elif trigger.entity_id == 'device_tracker.steffi_sugar' %}
#             'Hallo Steffi, schön dass du den weiten Weg von Amsterdam bis zu uns in die WG gefunden hast! Willkommen!'
#           {% elif trigger.entity_id == 'device_tracker.iphone_von_simon' %}
#             'Hallo Simon, schön dass du Daheim bist.'
#           {% elif trigger.entity_id == 'device_tracker.flos_iphone_2' %}
#             'Hallo Flo, schön dass du auch mal Daheim bist.'
#           {% elif trigger.entity_id == 'device_tracker.iphonevranziska' %}
#             'Hallo Franzi, schön dass du wieder bei uns in der WG bist.'
#           {% else %} 
#             'Hallo und herzlich willkommen!'
#           {% endif %}
#     - delay: 00:00:05
#     - service: rest_command.sonos_playlist_preset
#     - service: input_number.set_value
#       data_template:
#         entity_id: input_number.box1
#         value: '{{ range(0, 4) | random | float }}'
#     - service_template: >
#         {% if is_state('input_number.box1', '0.0' ) %}
#           {% if trigger.entity_id == 'device_tracker.iphone_chris_manuell_2' %}
#             rest_command.sonos_playlist_chris_1
#           {% elif trigger.entity_id == 'device_tracker.flos_iphone_2' or trigger.entity_id == 'entity_id: device_tracker.iphonevranziska' %}
#             rest_command.sonos_playlist_flo_1
#           {% else %}
#             rest_command.sonos_playlist_simon_1
#           {% endif %}
#         {% elif is_state('input_number.box1', '1.0' ) %}
#           {% if trigger.entity_id == 'device_tracker.iphone_chris_manuell_2' %}
#             rest_command.sonos_playlist_chris_2
#           {% elif trigger.entity_id == 'device_tracker.flos_iphone_2' or trigger.entity_id == 'entity_id: device_tracker.iphonevranziska' %}
#             rest_command.sonos_playlist_flo_2
#           {% else %}
#             rest_command.sonos_playlist_simon_2
#           {% endif %}
#         {% elif is_state('input_number.box1', '2.0' ) %}
#           {% if trigger.entity_id == 'device_tracker.iphone_chris_manuell_2' %}
#             rest_command.sonos_playlist_chris_3
#           {% elif trigger.entity_id == 'device_tracker.flos_iphone_2' or trigger.entity_id == 'entity_id: device_tracker.iphonevranziska' %}
#             rest_command.sonos_playlist_flo_3
#           {% else %}
#             rest_command.sonos_playlist_simon_3
#           {% endif %}
#         {% else %}
#           {% if trigger.entity_id == 'device_tracker.iphone_chris_manuell_2' %}
#             rest_command.sonos_playlist_chris_4
#           {% elif trigger.entity_id == 'device_tracker.flos_iphone_2' or trigger.entity_id == 'entity_id: device_tracker.iphonevranziska' %}
#             rest_command.sonos_playlist_flo_4
#           {% else %}
#             rest_command.sonos_playlist_simon_4
#           {% endif %}
#         {% endif %}
#     - delay: 0:05
#     - service: rest_command.sonos_playlist_play
    
      #http://192.168.178.73:5005/wohnzimmer/spotify/now/spotify:user:spotify:playlist:37i9dQZF1DWTlzJXLRpd4a?si=YTl1WZsRR5KniTjm6XQSWA api request to start playlist on sonos
      #source for documtation: https://github.com/jishi/node-sonos-http-api

      # - alias: 'Comming Home Light'
#   initial_state: true
#   trigger:
#     - platform: state
#       entity_id: device_tracker.iphone_chris_manuell_2 #WiFi based
#       from: "not_home"
#       to: "home"
#     - platform: state
#       entity_id: device_tracker.iphone_von_simon #WiFi based
#       from: "not_home"
#       to: "home"
#     - platform: state
#       entity_id: device_tracker.flos_iphone_2 #WiFi based
#       from: "not_home"
#       to: "home"
#     - platform: state
#       entity_id: device_tracker.iphonevranziska #WiFi based
#       from: "not_home"
#       to: "home"
#     - platform: state
#       entity_id: device_tracker.steffi_sugar #WiFi based
#       from: "not_home"
#       to: "home"
#   condition:
#     condition: and
#     conditions:
#       - condition: or
#         conditions:
#           - condition: sun
#             before: sunrise
#             before_offset: "+01:00:00"
#           - condition: sun
#             after: sunset
#             after_offset: "-01:00:00"
#       - condition: state
#         entity_id:  timer.coming_come_timer
#         state: 'active'
#       - condition: or
#         conditions:
#         - condition: and
#           conditions: # Chris
#             - condition: state
#               entity_id: device_tracker.iphone_von_simon # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.flos_iphone_2 # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.iphonevranziska # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
#               state: 'home'
#             - condition: state
#               entity_id: device_tracker.steffi_sugar # Wifi
#               state: 'not_home'
#         - condition: and
#           conditions: # Franzi
#             - condition: state
#               entity_id: device_tracker.iphone_von_simon # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.flos_iphone_2 # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.iphonevranziska # Wifi
#               state: 'home'
#             - condition: state
#               entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.steffi_sugar # Wifi
#               state: 'not_home'
#         - condition: and
#           conditions: # Flo
#             - condition: state
#               entity_id: device_tracker.iphone_von_simon # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.flos_iphone_2 # Wifi
#               state: 'home'
#             - condition: state
#               entity_id: device_tracker.iphonevranziska # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.steffi_sugar # Wifi
#               state: 'not_home'
#         - condition: and
#           conditions: # Simon
#             - condition: state
#               entity_id: device_tracker.iphone_von_simon # Wifi
#               state: 'home'
#             - condition: state
#               entity_id: device_tracker.flos_iphone_2 # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.iphonevranziska # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.steffi_sugar # Wifi
#               state: 'not_home'
#         - condition: and
#           conditions: # Steffi
#             - condition: state
#               entity_id: device_tracker.iphone_von_simon # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.flos_iphone_2 # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.iphonevranziska # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.iphone_chris_manuell_2 # Wifi
#               state: 'not_home'
#             - condition: state
#               entity_id: device_tracker.steffi_sugar # Wifi
#               state: 'home'
#   action:
#     - service: timer.cancel
#       entity_id: timer.coming_come_timer
#     - service: hue.hue_activate_scene
#       data:
#         group_name: Wohnzimmer
#         scene_name: Entspannt
#     - service: hue.hue_activate_scene
#       data_template:
#         group_name: >
#           {% if trigger.entity_id == 'device_tracker.iphone_chris_manuell_2' %}
#             Christian
#           {% elif trigger.entity_id == 'device_tracker.iphone_von_simon' or trigger.entity_id == 'device_tracker.steffi_sugar' %}
#             Simon
#           {% elif trigger.entity_id == 'device_tracker.flos_iphone_2' or trigger.entity_id == 'entity_id: device_tracker.iphonevranziska' %}
#             Flo
#           {% else %}
#             Wohnzimmer
#           {% endif %}
#         scene_name: >
#           {% if trigger.entity_id == 'device_tracker.iphone_chris_manuell_2' %}
#             Standard
#           {% elif trigger.entity_id == 'device_tracker.iphone_von_simon' or trigger.entity_id == 'device_tracker.steffi_sugar' %}
#             Hell
#           {% elif trigger.entity_id == 'device_tracker.flos_iphone_2' or trigger.entity_id == 'entity_id: device_tracker.iphonevranziska' %}
#             Hell
#           {% else %}
#             Entspannt
#           {% endif %}